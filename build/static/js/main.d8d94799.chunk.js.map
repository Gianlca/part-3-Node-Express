{"version":3,"sources":["layouts/Footer.js","components/Countries.js","services/notes.js","components/Note.js","components/Notification.js","components/Notes.js","services/phonebooks.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Phonebook.js","App.js","index.js"],"names":["Footer","style","color","fontStyle","fontSize","Countries","useState","countries","setCountries","query","setQuery","getCountries","a","url","axios","get","response","handleInput","event","value","target","useEffect","data","fetchCountries","type","onChange","Country","props","length","map","el","name","capital","population","languages","lang","index","height","width","alt","src","flag","numericCode","baseUrl","requestData","request","then","newObject","post","id","put","Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Notes","notes","setnotes","newNote","setNewNote","showAll","setShowAll","error","setError","noteService","concat","date","notesToShow","filter","n","changedNote","catch","setTimeout","toggleImportanceOf","onSubmit","preventDefault","noteObject","Date","toISOString","Math","random","createPerson","newPerson","deletePerson","delete","Filter","handleFilter","PersonForm","addPerson","handleInputName","number","handleInputNumber","Persons","personsToShow","person","Phonebook","persons","setPersons","setNewName","setnumber","setFilter","succesMessage","setSuccessMessage","errorMessage","setErrorMessage","newPersonObj","alert","personService","window","confirm","console","log","toLocaleLowerCase","includes","App","notex","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8d94799.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Footer = () => {\r\n  const footerStyle = {\r\n    color: \"green\",\r\n    fontStyle: \"italic\",\r\n    fontSize: 16,\r\n  };\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>\r\n        Note app, Department of Computer Science, University of Helsinki 2021\r\n      </em>\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const Countries = () => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const getCountries = async () => {\r\n    const url = ` https://api.countrylayer.com/v2/name/${query}?access_key=7b84c7dfad9958c4919908535a89017b`;\r\n    const response = await axios.get(url);\r\n    return response;\r\n  };\r\n\r\n  const handleInput = async (event) => {\r\n    const value = event.target.value;\r\n    setQuery(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchCountries() {\r\n      const response = await getCountries();\r\n      setCountries(response.data);\r\n    }\r\n    fetchCountries();\r\n  }, [query]);\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" onChange={handleInput} />\r\n      {countries ? <Country countries={countries}></Country> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Country = (props) => {\r\n  if (props.countries.length > 10) {\r\n    return <div>Too many matches, specify another filter</div>;\r\n  } else if (props.countries.length === 1) {\r\n    return (\r\n      <div>\r\n        {props.countries.map((el) => (\r\n          <div key={el.numericCode}>\r\n            <h2>{el.name}</h2>\r\n            <div>capital {el.capital}</div>\r\n            <div>population {el.population}</div>\r\n            <h4>Languages</h4>\r\n            <ul>\r\n              {el.languages.map((lang, index) => (\r\n                <li key={index}>{lang.name}</li>\r\n              ))}\r\n            </ul>\r\n            <div>\r\n              <img height=\"100\" width=\"100\" alt=\"flag\" src={el.flag}></img>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      {props.countries.map((el) => (\r\n        <div key={el.numericCode}> {el.name}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/notes\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return requestData(request);\r\n};\r\n\r\nconst createNote = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return requestData(request);\r\n};\r\n\r\nconst updateNote = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return requestData(request);\r\n};\r\n\r\nconst requestData = (request) => request.then((response) => response.data);\r\n\r\nexport default { getAll, createNote, updateNote };\r\n","import React from \"react\";\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important ? \"make not important\" : \"make important\";\r\n  return (\r\n    <li className=\"note\">\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React from \"react\";\r\n\r\nexport const Notification = ({ message, type }) => {\r\n  if (message == null) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={type}>{message}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport noteService from \"../services/notes\";\r\nimport Note from \"./Note\";\r\nimport { Notification } from \"./Notification\";\r\n\r\nconst Notes = () => {\r\n  const [notes, setnotes] = useState([]);\r\n  const [newNote, setNewNote] = useState(\"\");\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.filter((n) => n.id === id);\r\n    const changedNote = { ...note, important: !note.important };\r\n\r\n    noteService\r\n      .updateNote(id, changedNote)\r\n      .then((data) => {\r\n        setnotes(notes.map((note) => (note.id !== id ? note : data)));\r\n      })\r\n      .catch((error) => {\r\n        setError(`This note ${error} was already delete`);\r\n        setTimeout(() => {\r\n          setError(null);\r\n        }, 5000);\r\n        setnotes(notes.filter((n) => n.id !== id));\r\n      });\r\n  };\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault();\r\n    const noteObject = {\r\n      content: newNote,\r\n      data: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n      id: notes.length + 1,\r\n    };\r\n\r\n    noteService.createNote(noteObject).then((response) => {\r\n      setnotes(notes.concat(noteObject));\r\n      setNewNote(\"\");\r\n    });\r\n  };\r\n\r\n  const handleNoteChange = (event) => setNewNote(event.target.value);\r\n\r\n  useEffect(() => {\r\n    noteService.getAll().then((data) => {\r\n      const nonExisting = {\r\n        id: 10000,\r\n        content: \"This note is not saved to server\",\r\n        date: \"2019-05-30T17:30:31.098Z\",\r\n        important: true,\r\n      };\r\n      setnotes(data.concat(nonExisting));\r\n    });\r\n  }, []);\r\n\r\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={error} type={\"error\"} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? \"important\" : \"all\"}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note) => (\r\n          <Note\r\n            key={note.id}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleNoteChange} />\r\n        <button type=\"submit\">submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst createPerson = async (newPerson) => {\r\n  const response = await axios.post(baseUrl, newPerson);\r\n  return response;\r\n};\r\n\r\nconst deletePerson = async (id) => {\r\n  const response = await axios.delete(`${baseUrl}/${id}`);\r\n  return response;\r\n};\r\n\r\nexport default { createPerson, deletePerson };\r\n","import React from 'react'\r\n\r\nexport default function Filter({handleFilter}) {\r\n  return (\r\n    <div>filter shown with: <input onChange={handleFilter} /></div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const PersonForm = ({addPerson, handleInputName, number, name, handleInputNumber}) => {\r\n  return (\r\n    <div>\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input value={name} onChange={handleInputName}/>\r\n        number: <input value={number} onChange={handleInputNumber}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>        \r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Persons = ({ personsToShow, deletePerson }) => {\r\n  return (\r\n    <div>\r\n      {personsToShow.map((person) => (\r\n        <div key={person.name}>\r\n          {person.name} - {person.number}\r\n          <button onClick={() => deletePerson(person)}>delete</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport personService from \"../services/phonebooks\";\r\nimport Filter from \"./Filter\";\r\nimport { Notification } from \"./Notification\";\r\nimport { PersonForm } from \"./PersonForm\";\r\nimport { Persons } from \"./Persons\";\r\nexport default function Phonebook() {\r\n  const [persons, setPersons] = useState([]);\r\n  const [name, setNewName] = useState(\"\");\r\n  const [number, setnumber] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [succesMessage, setSuccessMessage] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  const addPerson = async (event) => {\r\n    event.preventDefault();\r\n    const newPersonObj = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    for (let element of persons) {\r\n      if (element.name === name) {\r\n        alert(`${name} is already added to phonebook`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    await personService.createPerson(newPersonObj).then((response) => {\r\n      setPersons(persons.concat(response.data));\r\n      setSuccessMessage(`Added ${response.data.name}`);\r\n      setNewName(\"\");\r\n      setnumber(\"\");\r\n      setTimeout(() => {\r\n        setSuccessMessage(null);\r\n      }, 5000);\r\n    });\r\n  };\r\n\r\n  const deletePerson = async (person) => {\r\n    if (window.confirm(`\"Do you want to delete ${person.name}?\"`)) {\r\n      await personService\r\n        .deletePerson(person.id)\r\n        .then((response) => {\r\n          setPersons(persons.filter((n) => n.id !== person.id));\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessage(\r\n            `Information of ${person.name} has already been removed from server`\r\n          );\r\n          setTimeout(() => {\r\n            setErrorMessage(null);\r\n          }, 5000);\r\n        });\r\n    } else {\r\n      console.log(\"don't delete this person\");\r\n    }\r\n  };\r\n\r\n  const handleInputName = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleInputNumber = (event) => {\r\n    setnumber(event.target.value);\r\n  };\r\n\r\n  const handleFilter = (event) => {\r\n    setFilter(event.target.value);\r\n  };\r\n\r\n  const getPersons = () => {\r\n    const url = \"/api/persons\";\r\n    const promise = axios.get(url);\r\n    return promise;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPersons().then((response) => setPersons(response.data));\r\n  }, []);\r\n\r\n  const personsToShow = !filter\r\n    ? persons\r\n    : persons.filter((el) =>\r\n        el.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\r\n      );\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={succesMessage} type={\"success\"} />\r\n      <Notification message={errorMessage} type={\"error\"} />\r\n      <Filter handleFilter={handleFilter} />\r\n      <br />\r\n      <h3>Add a new person</h3>\r\n      <PersonForm\r\n        addPerson={addPerson}\r\n        handleInputName={handleInputName}\r\n        number={number}\r\n        name={name}\r\n        handleInputNumber={handleInputNumber}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <div>\r\n        <Persons personsToShow={personsToShow} deletePerson={deletePerson} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Footer } from \"./layouts/Footer\";\r\nimport { Countries } from \"./components/Countries\";\r\nimport Notes from \"./components/Notes\";\r\nimport Phonebook from \"./components/Phonebook\";\r\n\r\nconst App = ({ notex }) => {\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notes />\r\n      <h3>Countries Api</h3>\r\n      <Countries />\r\n      <div>\r\n        <Phonebook />\r\n      </div>\r\n      <div>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport \"./index.css\";\r\n\r\nconst notes = [\r\n  {\r\n    id: 1,\r\n    content: \"HTML is easy\",\r\n    date: \"2019-05-30T17:30:31.098Z\",\r\n    important: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    content: \"Browser can execute only JavaScript\",\r\n    date: \"2019-05-30T18:39:34.091Z\",\r\n    important: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    content: \"GET and POST are the most important methods of HTTP protocol\",\r\n    date: \"2019-05-30T19:20:14.298Z\",\r\n    important: true,\r\n  },\r\n];\r\n\r\nReactDOM.render(<App notex={notes} />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}